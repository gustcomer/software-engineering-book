INTENT
Encapsulate object creation logic, making it easier to introduce new types or variations of objects without affecting the parts of a program that use them.
This is not a GoF pattern.

PARTICIPANTS
Client, Factory, Product, ConcreteProduct

CLASSIFICATION

IMPLEMENTATION
The Client code instantiates a Factory.
Then the Client code calls some creating method passing an argument specifying which type of object it wants to instantiate.
The Factory will process this argument in a big conditional loop and decide which type of ConcreteProduct to produce.
The ConcreteProduct is returned and can be used by the Client code.
Since the ConcreteProducts implement the same Product interface, the Client code can use it interchangeably.

INSIGHTS
- despite encapsulating the creation process behind a class with a single method, we still use big if statements in this method.

COLLABORATIONS

USE CASES

QUALITIES

================================================================================
GLOSSARY

ConcreteProduct: Objects generated by the factory that implement the same Product interface.
Factory [Creator]: has a method for creating similar objects with slight variations, consisting of a set of ConcreteProducts that implement the same Product interface.
Product: interface that assures that the generated objects have a common set of behaviors and can be interchangeable.
  - in the context of factories, the Objects that are instantiated as a result is called Products