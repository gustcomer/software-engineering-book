Hexagonal Architecture [Ports & Adapters]

================================================================================
Assertions

- Allow an application to equally be driven by users, programs, automated test
or batch scripts, and to be developed and tested in isolation from its eventual
run-time devices and databases.


================================================================================
Glossary

Adapter: a component in the sense of the GoF Adapter pattern that coordinates the exchanges between the external world and the ports.
Application: includes all the business logic as well as the services responsible for various functionalities and use cases.
Business Logic
Component
Configurator
Domain
Driver: components that use the Application at a Port.
  - aka Driver Actor
  - it's the user-side that communicates with the Application
Driver Port: interfaces for the Use Cases.
Driver Port: interfaces that specify how the domain can be used.
  - aka Primary Port
Driven Port: interfaces for persistence, messaging.
Driven Port: interfaces that specify what functionality the domain needs.
Inside Layer
Mock Object
Outside Layer
Port: an interface that defines the contract between the core logic and the external world.
Use Case Boundary