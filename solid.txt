### Single Responsibility Principle (SRP)

- It's preferable to create one Class corresponding to each actor.
- The name Single Responsibility Principle may give the impression that a module
should do one and only one thing. This is a valid Clean Code and refactor
principle, but this is not SRP.
- A module should have one, and only one, reason to change. A module should be
responsible to one, and only one, user or stakeholder. A module should be
responsible to one, and only one, actor.

### Open Closed Principle (OCP)

- A software artifact should be open for extension but closed for modification.
- In order to do that, you sould separate the things that change for whatever
reason and organize the dependencies in a way that the things that change more
frequently stay behind more stable interfaces that change less frequently
(Dependency Inversion Principle - DIP)
- One way of implementing Dependency Inversion is through Strategy Pattern, but
that is not the only one.
- We reach OCP transforming the dependencies into a unidirectional graph like a
tree.
- Or yet: partitioning the system into components, and arranging those
components into a dependency hierarchy that protects higher-level components
from changes in lower-level components.
- In other words, you take a behavior that varies a lot, put it behind a
contract and create an extension point.

### Liskov Substitution Principle (LSP)

- The derived classes should be interchangeable with theis base classes.
- If a class interacts with some interface, this class should be able to
interact with all subclasses that implement that interface without worrying with
the behavior of the subclass. Only worring with the superclass behavior.
- As a classic example, a Rectangle interface should not have a Square subclass.
For this to work, we would have to put ifs in the context using the Square class
and it would be a disaster.
- We would have to manually assure the Invariant condition between Height and
Width (in a square they should be equal).

================================================================================
Glossary